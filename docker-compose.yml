version: '3'

services:
  # PHP Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: jua-app
    container_name: jua-app
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
    depends_on:
      - db
      - redis
    networks:
      - jua-network
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=${APP_URL}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - PUSHER_APP_ID=${PUSHER_APP_ID}
      - PUSHER_APP_KEY=${PUSHER_APP_KEY}
      - PUSHER_APP_SECRET=${PUSHER_APP_SECRET}
      - PUSHER_HOST=${PUSHER_HOST}
      - PUSHER_PORT=${PUSHER_PORT}
      - PUSHER_SCHEME=${PUSHER_SCHEME}
      - PUSHER_APP_CLUSTER=${PUSHER_APP_CLUSTER}

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: jua-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - jua-network

  # MySQL Service (using external DB in production)
  db:
    image: mysql:8
    container_name: jua-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - jua-mysql-data:/var/lib/mysql
    networks:
      - jua-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:alpine
    container_name: jua-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-null}
    volumes:
      - jua-redis-data:/data
    networks:
      - jua-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    image: jua-app
    container_name: jua-queue
    restart: unless-stopped
    command: php artisan queue:work --tries=3 --timeout=90
    volumes:
      - ./:/var/www/html
    depends_on:
      - app
      - db
      - redis
    networks:
      - jua-network
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: jua-app
    container_name: jua-scheduler
    restart: unless-stopped
    command: /bin/bash -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    volumes:
      - ./:/var/www/html
    depends_on:
      - app
      - db
      - redis
    networks:
      - jua-network
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}

networks:
  jua-network:
    driver: bridge

volumes:
  jua-mysql-data:
  jua-redis-data:
